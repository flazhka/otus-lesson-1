# -*- mode: ruby -*-
# vim: set ft=ruby :

file_to_disk = './server-borg_disk.vdi'

Vagrant.configure("2") do |config|
    # Base VM OS configuration.
    config.vm.box = "generic/oracle9"
    config.vm.provider :virtualbox do |v|
      v.memory = 512
      v.cpus = 2
    end

    boxes = [
      { :name => "client-borg",
      :ip => "192.168.50.10",
      :ip2 => "192.168.56.10",
      },
      { :name => "server-borg",
      :ip => "192.168.50.20",
      :ip2 => "192.168.56.20",
      }
    ]

    # Provision each of the VMs.
      boxes.each do |opts|
        config.vm.define opts[:name] do |config|
          config.vm.hostname = opts[:name]
          config.vm.network "private_network", ip: opts[:ip], virtualbox__intnet: "net_backup"
          config.vm.network "private_network", ip: opts[:ip2]

          config.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            systemctl restart sshd
            setenforce 0
            sed -i "s/SELINUX=enforcing/SELINUX=disabled/" /etc/selinux/config
          SHELL
          if opts[:name] == "server-borg"
            config.vm.provider :virtualbox do |vb|
              needsController = false
              unless File.exist?(file_to_disk)
                vb.customize ['createhd', '--filename', file_to_disk, '--variant', 'Fixed', '--size', 2 * 1024]
                needsController = true
              end
              if needsController == true
                 vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                 vb.customize ['storageattach', :id, '--storagectl', 'SATA', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]
              end
            end
            config.vm.provision "ansible" do |ansible|
              ansible.playbook = "provision-borg.yml"
              ansible.inventory_path = "inventories/inventory.yml"
              ansible.host_key_checking = "false"
              ansible.limit = "all"
            end
          end
        end  
      end
end