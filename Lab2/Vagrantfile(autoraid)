# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = { #Описываем переменные для создания vm
  :raidconfig => { #Указываем имя ВМ 
    :box_name => "generic/centos9s", #Версия образа ос
    :ip_addr => '192.168.56.101', #IP адрес
    :disks => { #Дополнительные диски в системе
      :sata1 => {
        :dfile => './sata1.vdi', #Где будут расположены
        :size => 100, #Объем в мегабайтах
        :port => 1 #Порт на контроллере
      },
      :sata2 => {
        :dfile => './sata2.vdi',
        :size => 100,
        :port => 2
      },
      :sata3 => {
        :dfile => './sata3.vdi',
        :size => 100,
        :port => 3
      },
      :sata4 => {
        :dfile => './sata4.vdi',
        :size => 100,
        :port => 4
      },
      :sata5 => {
        :dfile => './sata5.vdi',
        :size => 100,
        :port => 5
      }
    }
  },
}

Vagrant.configure("2") do |config| #Циклы создание vm
  MACHINES.each do |boxname, boxconfig| 
      config.vm.define boxname do |box|
          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s
          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
          box.vm.network "private_network", ip: boxconfig[:ip_addr]
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1024"]
            needsController = false
            boxconfig[:disks].each do |dname, dconf|
              unless File.exist?(dconf[:dfile])
                vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                needsController =  true
              end
              end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ] #Создание нового контроллера
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
          box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
          yum install -y mdadm smartmontools hdparm gdisk #Установка приложений
          sudo mdadm --create --verbose /dev/md0 -l 5 -n 5 /dev/sd{b,c,d,e,f} &> /dev/null
          mkdir /etc/mdadm
          echo "DEVICE partitions" | tee /etc/mdadm/mdadm.conf
          sudo mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' | tee -a /etc/mdadm/mdadm.conf
          sudo parted -s /dev/md0 mklabel gpt #Создаем раздел GPT на созданный RAID
          sudo parted -s /dev/md0 mkpart primary ext4 0% 20% &> /dev/null
          sudo parted -s /dev/md0 mkpart primary ext4 20% 40% &> /dev/null
          sudo parted -s /dev/md0 mkpart primary ext4 40% 60% &> /dev/null
          sudo parted -s /dev/md0 mkpart primary ext4 60% 80% &> /dev/null
          sudo parted -s /dev/md0 mkpart primary ext4 80% 100% &> /dev/null
          for i in $(seq 1 5); do mkfs.ext4 /dev/md0p$i &> /dev/null; done #Создание fs ext4 на партициях
          mkdir -p /raid/part{1,2,3,4,5} #Выполним монтирование
          for i in $(seq 1 5); do mount /dev/md0p$i /raid/part$i&> /dev/null; done
          echo "/dev/md0 /mnt/part1 ext4 defaults 0 0" >> /etc/fstab
          echo "/dev/md0 /mnt/part2 ext4 defaults 0 0" >> /etc/fstab
          echo "/dev/md0 /mnt/part3 ext4 defaults 0 0" >> /etc/fstab
          echo "/dev/md0 /mnt/part4 ext4 defaults 0 0" >> /etc/fstab
          echo "/dev/md0 /mnt/part5 ext4 defaults 0 0" >> /etc/fstab
          SHELL
        end
  end
end